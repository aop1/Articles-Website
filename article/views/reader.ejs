<!-- article/views/reader.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reader</title>
    <style>
        .hidden {
            display: none;
        }
        
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        header {
            background-color: #333;
            color: white;
            padding: 10px 20px;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 5px auto; /* Auto left and right margins center the element */
            max-width: 1050px; /* Adjust the maximum width as needed */
        }

        button {
            background-color: #4caf50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            margin-left: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        button[type="submit"] {
            background-color: #3498db;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button[type="submit"]:hover {
            background-color: #2980b9;
        }

        .navigation-buttons {
            order: 1; /* Move to the left */
            display: flex;
            justify-content: space-between;
        }

        .search-form {
            display: flex;
            align-items: center;
            order: 2; /* Move to the middle */
        }

        .search-form input {
            padding: 8px;
            margin-right: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .search-form button {
            background-color: #4caf50;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .search-form button:hover {
            background-color: #45a049;
        }

        .role-selector,
        .user-info {
            order: 3; /* Move to the right */
        }

        .user-info button {
            background-color: #3498db;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .user-info button:hover {
            background-color: #2980b9;
        }

        .user-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .user-info span {
            font-weight: bold;
        }

        .role-selector {
            display: flex;
            align-items: center;
        }

        .role-selector label {
            margin-right: 10px;
        }

        .role-selector select {
            padding: 8px;
        }

        main {
            margin: 20px auto; /* Auto left and right margins center the element */
            max-width: 1050px; /* Adjust the maximum width as needed */
            padding: 0 20px; /* Add padding to the sides if desired */
        }

        article {
            margin-bottom: 20px;
            /* background-color: #f5f5f5; */
            /* background-color: #bae0ff; */
            background-color: #cfe9ff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        h2 {
            color: #333;
            font-size: 24px;
            margin-bottom: 10px;
            word-wrap: break-word;
        }

        p {
            color: #555;
            font-size: 16px;
            line-height: 1.6;
            white-space: pre-wrap; /* Preserve spaces and line breaks */
            word-wrap: break-word; /* Break long words and wrap onto the next line */
        }

        small {
            color: #777;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: unset;
        }

        textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 12px;
            box-sizing: border-box;
            font-size: 16px;
        }

        h3 {
            color: #333;
            margin-top: 20px;
            font-size: 20px;
        }

        ul {
            list-style: none;
            padding: 0;
        }

        li {
            margin-bottom: 15px;
        }

        .comment-content {
            white-space: pre-wrap; /* Preserve spaces and line breaks */
            word-wrap: break-word; /* Break long words and wrap onto the next line */
            border-top: 1px solid #ddd;
            margin-bottom: 8px;
            padding-top: 8px;
        }

        .comment-info {
            color: #888;
            font-size: 0.8em;
        }

        img {
            /* width: 100%;
            height: 100px;
            object-fit: cover; /* Ensures the image covers the specified dimensions */
            margin-bottom: 20px;
            max-width: 950px;
        }

        .img-container {
            display: flex;
            justify-content: center;
            align-items: center;
        }

    </style>
</head>
<body>
    <header>
        <div class="header-container">
            <div class="navigation-buttons">
                <!-- Previous and Next buttons -->
                <% if (previousArticle) { %>
                    <button onclick="location.href='/articles/<%= previousArticle._id %>'">Previous</button>
                <% } %>
                <% if (nextArticle) { %>
                    <button onclick="location.href='/articles/<%= nextArticle._id %>'">Next</button>
                <% } %>
            </div>
            
            <!-- Search bar -->
            <form action="/search" method="get" class="search-form">
                <input type="text" name="q" placeholder="Search articles...">
                <button type="submit">Search</button>
            </form>
            
            <!-- User role selector -->
            <div class="role-selector">
                <!-- <label for="role">Role:</label> -->
                <select id="role" name="role" onchange="changeRole(this)">
                    <option value="reader">Reader</option>
                    <option value="author">Author</option>
                </select>
            </div>
            
            <!-- User information and logout button -->
            <div class="user-info">
                <span><%= user.username %></span>
                <button onclick="location.href='/logout'">Logout</button>
            </div>
        </div>
    </header>

    <main class="hidden">
        <!-- Display the current article with title and body -->
        <% if (currentArticle) { %>
            <article>
                <h2><%= currentArticle.title %></h2>
                <p><%= currentArticle.body %></p>
                <% if (currentArticle.imageExtension) { %>
                    <div class="img-container">
                        <img src="/images/<%= currentArticle._id %><%= currentArticle.imageExtension %>" alt="Article Image">
                    </div>
                <% } %>
                <small class="created"><%=currentArticle.dateCreated %></small>
                <br>
                <small class="last-edited"><%= currentArticle.dateLastEdited %></small>
            </article>

            <div class="img-container">
                <!-- Use the image data to display the image -->
                <img src="<%= ad.path %>" alt="Ad" onload="sendImpression()" onclick="sendInteraction()" style="cursor: pointer; max-width: 620px;">
            </div>

            <!-- Form for adding comments -->
            <form action="/articles/<%= currentArticle._id %>/comments/create" method="post">
                <label for="comment">Add a Comment:</label>
                <textarea id="comment" name="comment" rows="4" cols="50" required></textarea>
                <button type="submit">Submit Comment</button>
            </form>

            <!-- Display existing comments if any -->
            <% if (currentArticle.comments && currentArticle.comments.length > 0) { %>
                <h3>Comments:</h3>
                <ul>
                    <% currentArticle.comments.forEach(comment => { %>
                        <li>
                            <div class="comment-content"><%= comment.comment %></div>
                            <div class="comment-info" data-date="<%= comment.dateCreated %>" data-user="<%= comment.username %>">
                                <!-- Display delete button only if the current user is the author of the comment -->
                                <% if (comment.username === user.username) { %>
                                    <form action="/articles/<%= currentArticle._id %>/comments/<%= comment._id %>/delete" method="post" style="display:inline;border-top: 0px;">
                                        <button type="submit" style="background-color: #f44336;">Delete</button>
                                    </form>
                                <% } %>
                            </div>
                        </li>
                    <% }); %>
                </ul>
            <% } %>
        <% } else { %>
            <p>No articles to display.</p>
        <% } %>
    </main>
</body>
</html>

<script>
    function sendImpression() {
        // Prepare data for the POST request
        const postData = {
            ad_id: '<%= ad._id %>',
            eventType: 'impression',
            userAgent: navigator.userAgent,
            user: '<%= user.id %>',
            article: '<%= currentArticle._id %>'
        };

        const hostname = window.location.hostname;
        const port = window.location.port;
        // Send a POST request to the '/ad/event' endpoint
        fetch(`/ad/event`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(postData),
        })
        .then(response => {
            if (!response.ok) {
                console.error('Error sending impression:', response.statusText);
            }
        })
        .catch(error => {
            console.error('Error sending impression:', error);
        });
    }

    function sendInteraction() {
        // Prepare data for the POST request
        const postData = {
            ad_id: '<%= ad._id %>',
            eventType: 'interaction',
            userAgent: navigator.userAgent,
            user: '<%= user.id %>',
            article: '<%= currentArticle._id %>'
        };

        // Send a POST request to the '/ad/event' endpoint
        fetch('/ad/event', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(postData),
        })
        .then(response => {
            if (!response.ok) {
                console.error('Error sending interaction:', response.statusText);
            }
        })
        .catch(error => {
            console.error('Error sending interaction:', error);
        });

        // Open a new tab with the specified URL
        const newTabUrl = '<%= ad.url %>'; 
        window.open(newTabUrl, '_blank');
    }

    function changeRole(select) {
        const selectedRole = select.value;
        if (selectedRole === 'author') {
            window.location.href = '/author';
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        var dateElements = document.querySelectorAll('.comment-info');

        dateElements.forEach(function (element) {
            var originalDate = element.getAttribute('data-date');
            var formattedDate = formatDate(originalDate);
            element.innerHTML = element.getAttribute('data-user') + ' on ' + formattedDate + element.innerHTML;
        });

        dateElements = document.querySelectorAll('.last-edited');

        dateElements.forEach(function (element) {
            originalDate = element.textContent;
            formattedDate = formatDate(originalDate);
            element.textContent = 'Last Edited: ' + formattedDate;
        });

        dateElements = document.querySelectorAll('.created');

        dateElements.forEach(function (element) {
            originalDate = element.textContent;
            formattedDate = formatDate(originalDate);
            element.textContent = 'Created: ' + formattedDate;
        });

        // Remove the 'hidden' class from the body element to make it visible
        document.querySelector('main').classList.remove('hidden');

        function formatDate(dateString) {
            const options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', timeZoneName: 'short' };
            const formattedDate = new Date(dateString).toLocaleDateString('en-US', options);
            return formattedDate;
        }
    });
</script>